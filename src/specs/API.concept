concept API

purpose
  handle HTTP requests and responses for external access to the projecthub platform

state
  Request
    id: ObjectId
    method: "GET" | "POST" | "PUT" | "DELETE"
    path: String
    headers: Object
    body: Object?
    params: Object?
    query: Object?
    userId: ObjectId?
    sessionId: String?
    timestamp: Date
    
  Response
    id: ObjectId
    requestId: ObjectId
    status: Number
    headers: Object
    body: Object
    timestamp: Date

actions
  request(method: String, path: String, headers: Object?, body: Object?, params: Object?, query: Object?, userId: ObjectId?, sessionId: String?) -> Request | {error}
    - create new API request
    - validate method and path
    - return request with generated id and timestamp

  respond(requestId: ObjectId, status: Number, headers: Object?, body: Object) -> Response | {error}
    - create response for request
    - return response with generated id and timestamp

queries
  _waitForResponse(request: Request) -> [Response]
    - wait for and return response for given request
    - used by API routes to get sync responses

  _getRequest(id: ObjectId) -> [Request]
    - return request by id

  _getResponse(id: ObjectId) -> [Response]
    - return response by id

  _getRequestsByUser(userId: ObjectId) -> [Request]
    - return requests for user

  _getRequestsByPath(path: String) -> [Request]
    - return requests for path

operational principle
  The API concept serves as the gateway between HTTP requests and the concept-based backend. It receives requests from Next.js API routes, stores them with proper context (user, session), and coordinates with other concepts through synchronizations to generate appropriate responses. This enables the concept system to be exposed as REST endpoints while maintaining the flow-based architecture.
